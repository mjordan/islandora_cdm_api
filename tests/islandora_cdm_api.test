<?php

/**
 * @file
 * Attempts sample objects and test the CONTENTdm API methods.
 */

class IslandoraCdmApiTestCase extends IslandoraCollectionWebTestCase {

  /**
   * Get test information.
   *
   * @see IslandoraWebTestCase::getInfo()
   */
  public static function getInfo() {
    return array(
      'name' => 'CONTENTdm API tests',
      'description' => 'Tests basic functionality of the Islandora CONTENTdm API',
      'group' => 'Islandora CONTENTdm API',
    );
  }

  /**
   * Set up the test environment.
   *
   * @see IslandoraWebTestCase::setUp()
   */
  public function setUp() {
    $this->solr_url = variable_get('islandora_solr_url', 'http://localhost:8080/solr');
    parent::setUp(array(
      'islandora',
      'islandora_basic_image',
      'islandora_basic_collection',
      'islandora_solr',
      'islandora_cdm_api',
    ));

    $user = $this->drupalCreateUser(array_keys(module_invoke_all('permission')));
    $this->drupalLogin($user);

    // Ingest test collection.
    $collection_pid = 'mycollection:collection';
    $this->createTestCollection('My Test Collection', 'islandora:sp_basic_image', $collection_pid);

    // Add CDMFIELDINFO datastream to the collection object.
    $tuque = islandora_get_tuque_connection();
    $cdmfieldinfo_file = drupal_get_path('module', 'islandora_cdm_api') . '/tests/fixtures/CDMFIELDINFO.json';
    $coll_object = $tuque->repository->getObject($collection_pid);
    $cdmfieldinfo_ds = $coll_object->constructDatastream('CDMFIELDINFO');
    $cdmfieldinfo_ds->label = 'CONTENTdm field info';
    $cdmfieldinfo_ds->setContentFromFile($cdmfieldinfo_file);
    $cdmfieldinfo_ds->mimetype = "application/json";
    $coll_object->ingestDatastream($cdmfieldinfo_ds);

    // Create basic image test objects.
    $test_file_basenames = array('image1', 'image2', 'image3');
    foreach ($test_file_basenames as $basename) {
      // Since the normal transforms that would add the value of the
      // mods:identifier element into dc.identifier do not appear to work in
      // this test environment, we resort using the CONTENTdm URL as the
      // object label, since we know that is indexed in Solr. First, get
      // the CONTENTdm URL for the object from its MODS file.
      $test_mods_file = drupal_get_path('module', 'islandora_cdm_api') . '/tests/fixtures/' . $basename . '.xml';
      $mods_xml = file_get_contents($test_mods_file);
      $mods_dom = new DOMDocument();
      $mods_dom->loadXML($mods_xml);
      $mods_xpath = new DOMXPath($mods_dom);
      $mods_xpath->registerNamespace('mods', "http://www.loc.gov/mods/v3");
      $mods_identifier = $mods_xpath->query("//mods:identifier");
      $object_label = $mods_identifier->item(0)->nodeValue;

      // Ingest the test object.
      $object_pid = 'islandora:' . $basename;
      $object_properties = array(
        'label' => $object_label,
        'pid' => $object_pid,
        'models' => 'islandora:sp_basic_image',
      );
      $datastreams = array(
        array(
          'dsid' => 'OBJ',
          'control_group' => 'M',
          'mimetype' => 'image/jpeg',
          'path' => drupal_get_path('module', 'islandora_cdm_api') . '/tests/fixtures/' . $basename . '.jpg',
        ),
        array(
          'dsid' => 'TN',
          'control_group' => 'M',
          'mimetype' => 'image/jpeg',
          'path' => drupal_get_path('module', 'islandora_cdm_api') . '/tests/fixtures/' . $basename . '.TN.jpg',
        ),
        array(
          'dsid' => 'MODS',
          'control_group' => 'M',
          'mimetype' => 'text/xml',
          'path' => drupal_get_path('module', 'islandora_cdm_api') . '/tests/fixtures/' . $basename . '.xml',
        ),
        array(
          'dsid' => 'CDMCPD',
          'control_group' => 'M',
          'mimetype' => 'text/xml',
          'path' => drupal_get_path('module', 'islandora_cdm_api') . '/tests/fixtures/' . $basename . '.CDMCPD.xml',
        ),
      );
      $this->ingestConstructedObject($object_properties, $datastreams);
      sleep(5);
    }
  }

  /**
   * Test the CONTENTdm API emulation methods.
   */
  public function testApi() {
    // The CONTENTdm URL is in the object title, for the tests.
    variable_set('islandora_cdm_api_identifier_element', 'dc.title');

    // Test to see if Solr is available.
    $this->assertTrue(islandora_solr_ping($this->solr_url), t('Connected to Solr at %solr_url successfully.', array('%solr_url' => $this->solr_url)), 'Islandora');

    // And if a simple query for 'contentdm' works.
    $this->drupalGet('islandora/search/contentdm', array('query' => array('type' => 'dismax')));
    $this->assertResponse(200, 'Response from simple solr search OK');
    $match = preg_match('|\sof\s+[1-9]|', $this->content);
    $this->assertTrue($match, 'Search results were found');

    // Test GetItemDmmodified API call. drupalGet uses url()'s query syntax.
    $this->drupalGet('cdm_api', array('query' => array('c' => 'dmGetDublinCoreFieldInfo/xml')));
    $this->assertResponse(200, 'Response OK');
    $match = preg_match('|Identifier|', $this->drupalGetContent());
    $this->assertTrue($match, 'Pattern |Identifier| found');

    $this->drupalGet('cdm_api', array('query' => array('c' => 'dmGetDublinCoreFieldInfo/json')));
    $this->assertResponse(200, 'Response OK');
    $this->assertPattern('|Identifier|');

    // Test dmGetCollectionFieldInfo API call.
    $this->drupalGet('cdm_api', array('query' => array('c' => 'dmGetCollectionFieldInfo/mycollection/json')));
    $this->assertResponse(200, 'Response OK');
    $this->assertPattern('|Title|');

    // Test dmGetCollectionParameters API call.
    $this->drupalGet('cdm_api', array('query' => array('c' => 'dmGetCollectionParameters/mycollection/xml')));
    $this->assertResponse(200, 'Response OK');
    $this->assertPattern('|My Test Collection|');

    $this->drupalGet('cdm_api', array('query' => array('c' => 'dmGetCollectionParameters/mycollection/json')));
    $this->assertResponse(200, 'Response OK');
    $this->assertPattern('|My Test Collection|');

    // Test dmGetCompoundObjectInfo API call for object that was migrated from
    // http://contentdm.example.com/cdm/ref/collection/testcoll1/id/100.
    // http://contentdm.example.com/cdm/ref/collection/testcoll2/id/200.
    // http://contentdm.example.com/cdm/ref/collection/testcoll3/id/300.
    $original_cdm_ids = array(
      array('testcoll1', '100'),
      array('testcoll2', '200'),
      array('testcoll3', '300'),
    );
    foreach ($original_cdm_ids as $ids) {
      $this->drupalGet('cdm_api', array(
        'query' => array('c' => 'dmGetCompoundObjectInfo/' . $ids[0] . '/' . $ids[1] . '/xml')));
      $this->assertResponse(200, 'Response OK');
      // Check for the Cdm object's 'pointer' in the CPD datastream's output.
      $this->assertPattern("|$ids[1]|");
    }

    // Test dmGetImageInfo API call.
    $this->drupalGet('cdm_api', array('query' => array('c' => 'dmGetImageInfo/testcoll1/100/xml')));
    $this->assertResponse(200, 'Response OK');
    $this->assertPattern('|334|');

    $this->drupalGet('cdm_api', array('query' => array('c' => 'dmGetImageInfo/testcoll1/100/json')));
    $this->assertResponse(200, 'Response OK');
    $this->assertPattern('|Record does not exist|');

    // @todo: Add test for dmGetItemInfo.
    // @todo: Add test for dmQuery.
    // @todo: Add test for GetItemDmmodified.
    // @todo: Add test for GetParent.
    // @todo: Add test for getfile.
    // @todo: Add test for getimage.
    // @todo: Add test for getstream.
    // Test the getthumbnail API call.
    $this->drupalGet('cdm_api/utils/getthumbnail/collection/testcoll1/id/100');
    $this->assertResponse(200, 'Response OK');
    $content_size = $this->drupalGetHeader('Content-Length');
    $this->assertTrue($content_size == '2321', 'Thumbnail had size of 2321 bytes');
  }

}
