<?php

/**
 * @file
 * Attempts to ingest some image into a randomly generated image collection
 * and perform lookups on their CONTENTdm URLs.
 */

class IslandoraBasicImageIngestTestCase extends IslandoraCollectionWebTestCase {

  /**
   * Get test information.
   *
   * @see IslandoraWebTestCase::getInfo()
   */
  public static function getInfo() {
    return array(
      'name' => 'CONTENTdm API tests',
      'description' => 'Tests basic functionality of the Islandora CONTENTdm API',
      'group' => 'Islandora CONTENTdm API',
    );
  }

  /**
   * Set up the test environment.
   *
   * @see IslandoraWebTestCase::setUp()
   */
  public function setUp() {
    parent::setUp(array(
      'islandora',
      'islandora_basic_image',
      'islandora_basic_collection',
      'islandora_solr',
      'islandora_cdm_api',
    ));
  }

  /**
   * Ingests objects that we use in our CONTENTdm API tests.
   */
  public function testIngestImages() {
    // Attempts to create collection.
    $collectionpid = 'islandora%3Acdm_api_test_collection';
    $this->createTestCollection('Test collection', 'islandora:sp_basic_image', $collectionpid);

    // Attempts to create an object.
    $path = 'islandora/object/' . $collectionpid . '/manage/overview/ingest';
    $file = drupal_get_path('module', 'islandora_cdm_api') . '/tests/fixtures/test.png';
    $handle = fopen($file, "r");
    $contents = fread($handle, filesize($file));
    fclose($handle);
    $edit = array(
      'files[file]' => $file,
    );
    $this->drupalPost($path, $edit, t('Ingest'));
    $this->assertText('New Object', 'Image object was created', 'Islandora');
    $path = $this->url;
    $imagepath = $path . '/datastream/OBJ/view';
    $this->assertLinkByHref($imagepath, 0, t('Ingested image found on view page'), t('Islandora'));
  }
}
